// <auto-generated />
using System;
using ContabAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContabAPI.Migrations
{
    [DbContext(typeof(contabfinContext))]
    partial class contabfinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ContabAPI.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("EnderecoCliente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("endereco_cliente");

                    b.Property<string>("NomeCliente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome_cliente");

                    b.Property<int?>("TelefoneCliente")
                        .HasColumnType("int")
                        .HasColumnName("telefone_cliente");

                    b.Property<string>("TipoCliente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipo_cliente");

                    b.HasKey("IdCliente")
                        .HasName("PK__Clientes__677F38F50A8F7A9E");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ContabAPI.Models.DeclaracoesFinanceira", b =>
                {
                    b.Property<int>("IdDeclaracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_declaracao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeclaracao"), 1L, 1);

                    b.Property<string>("ConteudoDeclaracao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("conteudo_declaracao");

                    b.Property<int?>("DataPreparacao")
                        .HasColumnType("int")
                        .HasColumnName("data_preparacao");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("TipoDeclaracao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipo_declaracao");

                    b.HasKey("IdDeclaracao")
                        .HasName("PK__Declarac__1132B2610363BCFB");

                    b.HasIndex("IdCliente");

                    b.ToTable("DeclaracoesFinanceiras");
                });

            modelBuilder.Entity("ContabAPI.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"), 1L, 1);

                    b.Property<string>("CargoFuncionario")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cargo_funcionario");

                    b.Property<string>("Departamento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("departamento");

                    b.Property<string>("NomeFuncionario")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome_funcionario");

                    b.Property<int?>("TelefoneFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("telefone_funcionario");

                    b.HasKey("IdFuncionario")
                        .HasName("PK__Funciona__6FBD69C40E10D141");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("ContabAPI.Models.Servico", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServico"), 1L, 1);

                    b.Property<string>("DescricaoServico")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao_servico");

                    b.Property<decimal?>("TaxaServico")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("taxa_servico");

                    b.HasKey("IdServico")
                        .HasName("PK__Servicos__D06FB5A2DCB7B0C9");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("ContabAPI.Models.TransacoesFinanceira", b =>
                {
                    b.Property<int>("IdTransacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_transacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransacao"), 1L, 1);

                    b.Property<int?>("DataPreparacao")
                        .HasColumnType("int")
                        .HasColumnName("data_preparacao");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("TipoTransacao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipo_transacao");

                    b.Property<decimal?>("ValorTransicao")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_transicao");

                    b.HasKey("IdTransacao")
                        .HasName("PK__Transaco__0FBBF7735B10FBDC");

                    b.HasIndex("IdCliente");

                    b.ToTable("TransacoesFinanceiras");
                });

            modelBuilder.Entity("ContabAPI.Models.DeclaracoesFinanceira", b =>
                {
                    b.HasOne("ContabAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("DeclaracoesFinanceiras")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Declaraco__id_cl__3D5E1FD2");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("ContabAPI.Models.TransacoesFinanceira", b =>
                {
                    b.HasOne("ContabAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("TransacoesFinanceiras")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Transacoe__id_cl__3A81B327");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("ContabAPI.Models.Cliente", b =>
                {
                    b.Navigation("DeclaracoesFinanceiras");

                    b.Navigation("TransacoesFinanceiras");
                });
#pragma warning restore 612, 618
        }
    }
}
